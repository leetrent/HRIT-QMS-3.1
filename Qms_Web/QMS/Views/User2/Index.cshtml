@model QMS.ViewModels.UserListViewModel;

@if (Context.User.Identity.IsAuthenticated)
{
<h1 class="display-4 text-center">User Admin</h1>

@if (@Model.ShowAlert == true)
    {
<div class="@Model.AlertCssClass" role="alert">
    @Html.Raw(@Model.AlertMessage)
    <button type="button" class="close" data-dismiss="alert" aria-label="Close">
        <span aria-hidden="true">&times;</span>
    </button>
</div>
    }

<nav>
    <div class="nav nav-tabs" id="nav-user_tab" role="tablist">
        <a class="@Model.ActiveUserNavItemNavLink"
           id="users-active-tab"
           data-toggle="tab"
           href="#users-active-content"
           role="tab"
           aria-controls="users-active-content"
           aria-selected="true">
            Active Users
        </a>
        <a class="@Model.InactiveUserNavItemNavLink"
           id="users-inactive-tab"
           data-toggle="tab"
           href="#users-inactive-content"
           role="tab"
           aria-controls="users-inactive-content"
           aria-selected="false">
            Inactive Users
        </a>
    </div>
</nav>
<div class="tab-content" id="nav-perissions-tab-content">
    <div class="@Model.ActiveUserTabPadFade" id="users-active-content" role="tabpanel" aria-labelledby="users-active-tab">
        @await Component.InvokeAsync("UAUsersActive")
    </div>
    <div class="@Model.InactiveUserTabPadFade" id="users-inactive-content" role="tabpanel" aria-labelledby="users-inactive-tab">
        @await Component.InvokeAsync("UAUsersInactive")
    </div>
</div>
}

@section Scripts {
  
}